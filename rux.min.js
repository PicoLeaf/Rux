let c=[],f={},d=document,r="refresh",p="deleteProperty",h="html",a="Attribute",Push=(...e)=>setTimeout((t=>(c=[...c,...e]).map((e=>d.querySelectorAll(e.name).forEach((t=>new e(t)))))),0),o=new MutationObserver((e=>e.map((e=>("a"==e.type[0]&&e.target._?.[r](),e.addedNodes.forEach((e=>c.map((t=>t.name.toUpperCase()==e.tagName&&new t(e))))))))));o.observe(d,{attributes:1,childList:1,subtree:1});class Component{states=new Proxy({},{get:(e,t)=>e[t],[p]:(e,t)=>(delete e[t],!this[r]()),set:(e,t,s)=>(e[t]=s,!this[r]())});attributes=new Proxy({},{get:(e,t)=>(t=this[h]["get"+a](t),f[t?.slice(3,-16)]??t),has:(e,t)=>this[h]["has"+a](t),set:(e,t,s)=>(s=this.rux`${s}`,!this[h]["set"+a](t,s)),[p]:(e,t)=>!this[h]["remove"+a](t)});constructor(e){e._=this,this[h]=e,this[r]()}[r](){this[h].innerHTML=this.render()}rux=(e,...t)=>t.reduce(((t,s,r)=>t+(s?.bind?(f[btoa(s)]=s.bind(this),`f['${btoa(s)}'](...arguments)`):s)+e[r+1]),e[0])}
